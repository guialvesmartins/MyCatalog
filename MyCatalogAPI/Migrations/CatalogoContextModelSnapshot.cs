// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCatalogAPI.Data;

#nullable disable

namespace MyCatalogAPI.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    partial class CatalogoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MyCatalogAPI.Models.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Catalogos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Sanduiches Tradicionais",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bebidas",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sobremesas",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Promocional",
                            Status = false
                        });
                });

            modelBuilder.Entity("MyCatalogAPI.Models.CatalogoProduto", b =>
                {
                    b.Property<int>("CatalogoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CatalogoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CatalogoProdutos");

                    b.HasData(
                        new
                        {
                            CatalogoId = 1,
                            ProdutoId = 1
                        },
                        new
                        {
                            CatalogoId = 1,
                            ProdutoId = 2
                        },
                        new
                        {
                            CatalogoId = 1,
                            ProdutoId = 3
                        },
                        new
                        {
                            CatalogoId = 1,
                            ProdutoId = 4
                        },
                        new
                        {
                            CatalogoId = 2,
                            ProdutoId = 6
                        },
                        new
                        {
                            CatalogoId = 3,
                            ProdutoId = 5
                        });
                });

            modelBuilder.Entity("MyCatalogAPI.Models.GrupoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GrupoProdutos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Sanduiche"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Bebida"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sobremesa"
                        });
                });

            modelBuilder.Entity("MyCatalogAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CatalogoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("GrupoProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("GrupoProdutoId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Hambuger, pão com gergelim, carne, presunto, muçarela, bacon, ovo, salsicha, alface, tomate, milho e Catupiry.",
                            GrupoProdutoId = 1,
                            Nome = "X-Tudo",
                            Status = true,
                            Valor = 19.9m
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Hambuger, pão com gergelim, carne, presunto, muçarela, bacon, ovo, alface, tomate, milho e Catupiry.",
                            GrupoProdutoId = 1,
                            Nome = "X-Especial",
                            Status = true,
                            Valor = 17.9m
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Hambuger, pão com gergelim, carne, presunto, muçarela, ovo, alface, tomate, milho e Catupiry.",
                            GrupoProdutoId = 1,
                            Nome = "X-Simples",
                            Status = true,
                            Valor = 15.9m
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Pão Francês, presunto, muçarela e ovo.",
                            GrupoProdutoId = 1,
                            Nome = "Misto Quente",
                            Status = true,
                            Valor = 11.9m
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Creme com leite condensado",
                            GrupoProdutoId = 3,
                            Nome = "Creme",
                            Status = true,
                            Valor = 9.9m
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Refrigerante Lara 350ml",
                            GrupoProdutoId = 1,
                            Nome = "Refrigerante Lata",
                            Status = true,
                            Valor = 4.5m
                        });
                });

            modelBuilder.Entity("MyCatalogAPI.Models.CatalogoProduto", b =>
                {
                    b.HasOne("MyCatalogAPI.Models.Catalogo", "Catalogo")
                        .WithMany()
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCatalogAPI.Models.Produto", "Produto")
                        .WithMany("CatalogosProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MyCatalogAPI.Models.Produto", b =>
                {
                    b.HasOne("MyCatalogAPI.Models.Catalogo", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CatalogoId");

                    b.HasOne("MyCatalogAPI.Models.GrupoProduto", "GrupoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("GrupoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoProduto");
                });

            modelBuilder.Entity("MyCatalogAPI.Models.Catalogo", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MyCatalogAPI.Models.GrupoProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MyCatalogAPI.Models.Produto", b =>
                {
                    b.Navigation("CatalogosProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
